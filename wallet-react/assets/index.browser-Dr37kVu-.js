const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./loadCognitoIdentity-CMcLElwS.js","./index-B2KWE4bN.js","./date-utils-CnaK6UUR.js","./index-Bn-ps2Oq.js","./index-KvNUIOYO.css","./noAuth-BRTlyyWt.js","./parseJsonBody-2UqsMYQr.js","./loadSts-55Ez2tRw.js","./create-aggregated-client-sX0lpe6c.js","./index-BD8wwq-W.js"])))=>i.map(i=>d[i]);
var K=Object.defineProperty;var j=(e,t,o)=>t in e?K(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o;var E=(e,t,o)=>j(e,typeof t!="symbol"?t+"":t,o);import{a8 as A}from"./index-Bn-ps2Oq.js";import{t as H,a as $,b as q,s as L,H as M,p as B,F as W,n as U}from"./date-utils-CnaK6UUR.js";const k=e=>{var t;return typeof ReadableStream=="function"&&(((t=e==null?void 0:e.constructor)==null?void 0:t.name)===ReadableStream.name||e instanceof ReadableStream)},O="The stream has already been transformed.",F=e=>{var n,s;if(!N(e)&&!k(e)){const i=((s=(n=e==null?void 0:e.__proto__)==null?void 0:n.constructor)==null?void 0:s.name)||e;throw new Error(`Unexpected stream implementation, expect Blob or ReadableStream, got ${i}`)}let t=!1;const o=async()=>{if(t)throw new Error(O);return t=!0,await L(e)},r=i=>{if(typeof i.stream!="function")throw new Error(`Cannot transform payload Blob to web stream. Please make sure the Blob.stream() is polyfilled.
If you are using React Native, this API is not yet supported, see: https://react-native.canny.io/feature-requests/p/fetch-streaming-body`);return i.stream()};return Object.assign(e,{transformToByteArray:o,transformToString:async i=>{const u=await o();if(i==="base64")return H(u);if(i==="hex")return $(u);if(i===void 0||i==="utf8"||i==="utf-8")return q(u);if(typeof TextDecoder=="function")return new TextDecoder(i).decode(u);throw new Error("TextDecoder is not available, please make sure polyfill is provided.")},transformToWebStream:()=>{if(t)throw new Error(O);if(t=!0,N(e))return r(e);if(k(e))return e;throw new Error(`Cannot transform payload to web stream, got ${e}`)}})},N=e=>typeof Blob=="function"&&e instanceof Blob;class _ extends Error{constructor(t,o=!0){var s;let r,n=!0;typeof o=="boolean"?(r=void 0,n=o):o!=null&&typeof o=="object"&&(r=o.logger,n=o.tryNextLink??!0),super(t),this.name="ProviderError",this.tryNextLink=n,Object.setPrototypeOf(this,_.prototype),(s=r==null?void 0:r.debug)==null||s.call(r,`@smithy/property-provider ${n?"->":"(!)"} ${t}`)}static from(t,o=!0){return Object.assign(new this(t.message,o),t)}}class h extends _{constructor(t,o=!0){super(t,o),this.name="CredentialsProviderError",Object.setPrototypeOf(this,h.prototype)}}function x(e){return Promise.all(Object.keys(e).reduce((t,o)=>{const r=e[o];return typeof r=="string"?t.push([o,r]):t.push(r().then(n=>[o,n])),t},[])).then(t=>t.reduce((o,[r,n])=>(o[r]=n,o),{}))}function D(e){return async t=>{var c;(c=e.logger)==null||c.debug("@aws-sdk/credential-provider-cognito-identity - fromCognitoIdentity");const{GetCredentialsForIdentityCommand:o,CognitoIdentityClient:r}=await A(async()=>{const{GetCredentialsForIdentityCommand:a,CognitoIdentityClient:f}=await import("./loadCognitoIdentity-CMcLElwS.js").then(d=>d.ah);return{GetCredentialsForIdentityCommand:a,CognitoIdentityClient:f}},__vite__mapDeps([0,1,2,3,4,5,6]),import.meta.url),n=a=>{var f,d,y;return((f=e.clientConfig)==null?void 0:f[a])??((d=e.parentClientConfig)==null?void 0:d[a])??((y=t==null?void 0:t.callerClientConfig)==null?void 0:y[a])},{Credentials:{AccessKeyId:s=z(e.logger),Expiration:i,SecretKey:u=V(e.logger),SessionToken:w}=G(e.logger)}=await(e.client??new r(Object.assign({},e.clientConfig??{},{region:n("region"),profile:n("profile")}))).send(new o({CustomRoleArn:e.customRoleArn,IdentityId:e.identityId,Logins:e.logins?await x(e.logins):void 0}));return{identityId:e.identityId,accessKeyId:s,secretAccessKey:u,sessionToken:w,expiration:i}}}function z(e){throw new h("Response from Amazon Cognito contained no access key ID",{logger:e})}function G(e){throw new h("Response from Amazon Cognito contained no credentials",{logger:e})}function V(e){throw new h("Response from Amazon Cognito contained no secret key",{logger:e})}const v="IdentityIds";class J{constructor(t="aws:cognito-identity-ids"){E(this,"dbName");this.dbName=t}getItem(t){return this.withObjectStore("readonly",o=>{const r=o.get(t);return new Promise(n=>{r.onerror=()=>n(null),r.onsuccess=()=>n(r.result?r.result.value:null)})}).catch(()=>null)}removeItem(t){return this.withObjectStore("readwrite",o=>{const r=o.delete(t);return new Promise((n,s)=>{r.onerror=()=>s(r.error),r.onsuccess=()=>n()})})}setItem(t,o){return this.withObjectStore("readwrite",r=>{const n=r.put({id:t,value:o});return new Promise((s,i)=>{n.onerror=()=>i(n.error),n.onsuccess=()=>s()})})}getDb(){const t=self.indexedDB.open(this.dbName,1);return new Promise((o,r)=>{t.onsuccess=()=>{o(t.result)},t.onerror=()=>{r(t.error)},t.onblocked=()=>{r(new Error("Unable to access DB"))},t.onupgradeneeded=()=>{const n=t.result;n.onerror=()=>{r(new Error("Failed to create object store"))},n.createObjectStore(v,{keyPath:"id"})}})}withObjectStore(t,o){return this.getDb().then(r=>{const n=r.transaction(v,t);return n.oncomplete=()=>r.close(),new Promise((s,i)=>{n.onerror=()=>i(n.error),s(o(n.objectStore(v)))}).catch(s=>{throw r.close(),s})})}}class Y{constructor(t={}){E(this,"store");this.store=t}getItem(t){return t in this.store?this.store[t]:null}removeItem(t){delete this.store[t]}setItem(t,o){this.store[t]=o}}const Q=new Y;function X(){return typeof self=="object"&&self.indexedDB?new J:typeof window=="object"&&window.localStorage?window.localStorage:Q}function Z({accountId:e,cache:t=X(),client:o,clientConfig:r,customRoleArn:n,identityPoolId:s,logins:i,userIdentifier:u=!i||Object.keys(i).length===0?"ANONYMOUS":void 0,logger:w,parentClientConfig:c}){w==null||w.debug("@aws-sdk/credential-provider-cognito-identity - fromCognitoIdentity");const a=u?`aws:cognito-identity-credentials:${s}:${u}`:void 0;let f=async d=>{const{GetIdCommand:y,CognitoIdentityClient:I}=await A(async()=>{const{GetIdCommand:l,CognitoIdentityClient:S}=await import("./loadCognitoIdentity-CMcLElwS.js").then(p=>p.ah);return{GetIdCommand:l,CognitoIdentityClient:S}},__vite__mapDeps([0,1,2,3,4,5,6]),import.meta.url),b=l=>{var S;return(r==null?void 0:r[l])??(c==null?void 0:c[l])??((S=d==null?void 0:d.callerClientConfig)==null?void 0:S[l])},g=o??new I(Object.assign({},r??{},{region:b("region"),profile:b("profile")}));let m=a&&await t.getItem(a);if(!m){const{IdentityId:l=ee(w)}=await g.send(new y({AccountId:e,IdentityPoolId:s,Logins:i?await x(i):void 0}));m=l,a&&Promise.resolve(t.setItem(a,m)).catch(()=>{})}return f=D({client:g,customRoleArn:n,logins:i,identityId:m}),f(d)};return d=>f(d).catch(async y=>{throw a&&Promise.resolve(t.removeItem(a)).catch(()=>{}),y})}function ee(e){throw new h("Response from Amazon Cognito contained no identity ID",{logger:e})}const me=e=>D({...e}),he=e=>Z({...e}),te="169.254.170.2",ne="169.254.170.23",oe="[fd00:ec2::23]",re=(e,t)=>{if(e.protocol!=="https:"&&!(e.hostname===te||e.hostname===ne||e.hostname===oe)){if(e.hostname.includes("[")){if(e.hostname==="[::1]"||e.hostname==="[0000:0000:0000:0000:0000:0000:0000:0001]")return}else{if(e.hostname==="localhost")return;const o=e.hostname.split("."),r=n=>{const s=parseInt(n,10);return 0<=s&&s<=255};if(o[0]==="127"&&r(o[1])&&r(o[2])&&r(o[3])&&o.length===4)return}throw new h(`URL not accepted. It must either be HTTPS or match one of the following:
  - loopback CIDR 127.0.0.0/8 or [::1/128]
  - ECS container host 169.254.170.2
  - EKS container host 169.254.170.23 or [fd00:ec2::23]`,{logger:t})}};function se(e){return new M({protocol:e.protocol,hostname:e.hostname,port:Number(e.port),path:e.pathname,query:Array.from(e.searchParams.entries()).reduce((t,[o,r])=>(t[o]=r,t),{}),fragment:e.hash})}async function ie(e,t){const r=await F(e.body).transformToString();if(e.statusCode===200){const n=JSON.parse(r);if(typeof n.AccessKeyId!="string"||typeof n.SecretAccessKey!="string"||typeof n.Token!="string"||typeof n.Expiration!="string")throw new h("HTTP credential provider response not of the required format, an object matching: { AccessKeyId: string, SecretAccessKey: string, Token: string, Expiration: string(rfc3339) }",{logger:t});return{accessKeyId:n.AccessKeyId,secretAccessKey:n.SecretAccessKey,sessionToken:n.Token,expiration:B(n.Expiration)}}if(e.statusCode>=400&&e.statusCode<500){let n={};try{n=JSON.parse(r)}catch{}throw Object.assign(new h(`Server responded with status: ${e.statusCode}`,{logger:t}),{Code:n.Code,Message:n.Message})}throw new h(`Server responded with status: ${e.statusCode}`,{logger:t})}const ce=(e,t,o)=>async()=>{for(let r=0;r<t;++r)try{return await e()}catch{await new Promise(s=>setTimeout(s,o))}return await e()},we=(e={})=>{var s;(s=e.logger)==null||s.debug("@aws-sdk/credential-provider-http - fromHttp");let t;const o=e.credentialsFullUri;if(o)t=o;else throw new h("No HTTP credential provider host provided.",{logger:e.logger});const r=new URL(t);re(r,e.logger);const n=new W;return ce(async()=>{const i=se(r);e.authorizationToken&&(i.headers.Authorization=e.authorizationToken);const u=await n.handle(i);return ie(u.response)},e.maxRetries??3,e.timeout??1e3)},ae="us-east-1",ye=(e,t)=>{let o;return async(r={})=>{var a,f,d,y,I,b;const{callerClientConfig:n}=r,s=e.logger??(n==null?void 0:n.logger);s==null||s.debug("@aws-sdk/credential-providers - fromTemporaryCredentials (STS)");const i={...e.params,RoleSessionName:e.params.RoleSessionName??"aws-sdk-js-"+Date.now()};if(i!=null&&i.SerialNumber){if(!e.mfaCodeProvider)throw new h("Temporary credential requires multi-factor authentication, but no MFA code callback was provided.",{tryNextLink:!1,logger:s});i.TokenCode=await e.mfaCodeProvider(i==null?void 0:i.SerialNumber)}const{AssumeRoleCommand:u,STSClient:w}=await A(async()=>{const{AssumeRoleCommand:g,STSClient:m}=await import("./loadSts-55Ez2tRw.js").then(l=>l.l);return{AssumeRoleCommand:g,STSClient:m}},__vite__mapDeps([7,1,2,3,4,5,8]),import.meta.url);if(!o){const g=typeof t=="function"?t():void 0,m=[e.masterCredentials,(a=e.clientConfig)==null?void 0:a.credentials,void(n==null?void 0:n.credentials),(f=n==null?void 0:n.credentialDefaultProvider)==null?void 0:f.call(n),g];let l="STS client default credentials";if(m[0])l="options.masterCredentials";else if(m[1])l="options.clientConfig.credentials";else{if(m[2])throw l="caller client's credentials",new Error("fromTemporaryCredentials recursion in callerClientConfig.credentials");m[3]?l="caller client's credentialDefaultProvider":m[4]&&(l="AWS SDK default credentials")}const S=[(d=e.clientConfig)==null?void 0:d.region,n==null?void 0:n.region,ae];let p="default partition's default region";S[0]?p="options.clientConfig.region":S[1]&&(p="caller client's region");const C=[P((y=e.clientConfig)==null?void 0:y.requestHandler),P(n==null?void 0:n.requestHandler)];let R="STS default requestHandler";C[0]?R="options.clientConfig.requestHandler":C[1]&&(R="caller client's requestHandler"),(I=s==null?void 0:s.debug)==null||I.call(s,`@aws-sdk/credential-providers - fromTemporaryCredentials STS client init with ${p}=${await U(T(S))()}, ${l}, ${R}.`),o=new w({...e.clientConfig,credentials:T(m),logger:s,profile:((b=e.clientConfig)==null?void 0:b.profile)??(n==null?void 0:n.profile),region:T(S),requestHandler:T(C)})}if(e.clientPlugins)for(const g of e.clientPlugins)o.middlewareStack.use(g);const{Credentials:c}=await o.send(new u(i));if(!c||!c.AccessKeyId||!c.SecretAccessKey)throw new h(`Invalid response from STS.assumeRole call with role ${i.RoleArn}`,{logger:s});return{accessKeyId:c.AccessKeyId,secretAccessKey:c.SecretAccessKey,sessionToken:c.SessionToken,expiration:c.Expiration,credentialScope:c.CredentialScope}}},P=e=>{var t;return((t=e==null?void 0:e.metadata)==null?void 0:t.handlerProtocol)==="h2"?void 0:e},T=e=>{for(const t of e)if(t!==void 0)return t},de=e=>async t=>{var a;(a=e.logger)==null||a.debug("@aws-sdk/credential-provider-web-identity - fromWebToken");const{roleArn:o,roleSessionName:r,webIdentityToken:n,providerId:s,policyArns:i,policy:u,durationSeconds:w}=e;let{roleAssumerWithWebIdentity:c}=e;if(!c){const{getDefaultRoleAssumerWithWebIdentity:f}=await A(async()=>{const{getDefaultRoleAssumerWithWebIdentity:d}=await import("./index-BD8wwq-W.js");return{getDefaultRoleAssumerWithWebIdentity:d}},__vite__mapDeps([9,7,1,2,3,4,5,8]),import.meta.url);c=f({...e.clientConfig,credentialProviderLogger:e.logger,parentClientConfig:{...t==null?void 0:t.callerClientConfig,...e.parentClientConfig}},e.clientPlugins)}return c({RoleArn:o,RoleSessionName:r??`aws-sdk-js-session-${Date.now()}`,WebIdentityToken:n,ProviderId:s,PolicyArns:i,Policy:u,DurationSeconds:w})},Se=e=>de({...e});export{me as fromCognitoIdentity,he as fromCognitoIdentityPool,we as fromHttp,ye as fromTemporaryCredentials,Se as fromWebToken};
