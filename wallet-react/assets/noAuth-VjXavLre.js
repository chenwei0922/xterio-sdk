class c{constructor({size:e,params:t}){this.data=new Map,this.parameters=[],this.capacity=e??50,t&&(this.parameters=t)}get(e,t){const s=this.hash(e);if(s===!1)return t();if(!this.data.has(s)){if(this.data.size>this.capacity+10){const i=this.data.keys();let a=0;for(;;){const{value:n,done:h}=i.next();if(this.data.delete(n),h||++a>10)break}}this.data.set(s,t())}return this.data.get(s)}size(){return this.data.size}hash(e){let t="";const{parameters:s}=this;if(s.length===0)return!1;for(const i of s){const a=String(e[i]??"");if(a.includes("|;"))return!1;t+=a+"|;"}return t}}class f{async sign(e,t,s){return e}}export{c as E,f as N};
